/* 
Seudoelementos son elementos que no existe en nuestro archivo html 
*/
:root {
  /* Definimos custom propertis, que son como variables en css */
  --blanco: #ffffff;
  --oscuro: #212121;
  --primario: #ffc107;
  --secundario: #0097a7;
  --gris: #757575;
  --gris-claro: #dfe9f3;

  --fuente-principal: 3.8rem;
}

/* Globales */
html {
  font-size: 62.5%;
  box-sizing: border-box;
  scroll-snap-type: y mandatory;
}
.servicio,
.nav-bg,
.formulario {
  scroll-snap-align: center;
  scroll-snap-stop: always;
}
/* Eliminar problema del box-sizing
Si yo especifico un width y agrego un padding, margin, border se modifica el tamaño del elemento
*/
*,
*:before,
*:after {
  box-sizing: inherit;
}
body {
  /* 1rem = 10px */
  font-size: 16px;
  font-family: "Krub", sans-serif;
  color: var(--oscuro);
  /* Degradado 
      %  Velocidad con la que va a cambiar el gradient 
  */
  background-image: linear-gradient(
    to top,
    var(--gris-claro) 0%,
    var(--blanco) 100%
  );
}
/* 
  Con esa dos propiedades en el body y en html, podemos trabajar más comodo con rem
  la ventajas esque se adapta mejor a cualquier tipo de dispositivo
 */

/*

 CSS toma en cuenta la especificidad, que tan especifioc somos con los selectores,
 si tiene la misma especifidad sigue en cascada toma el ultimo valor
.titulo p {
  color: red;
}

 p {
  color: red;
}

toma el primero porque tiene mayor especifidad

link: https://codigoconjuan.com/que-es-y-como-funciona-la-especificidad-en-css/

 */
.buton {
  background-color: var(--secundario);
  color: var(--blanco);
  padding: 1rem 3rem;
  font-weight: 700;
  text-transform: uppercase;
  text-align: center;
  border-style: none;
  border-radius: 0.5rem;
  margin-top: 2rem;
  width: 90%;
}
.buton:hover {
  cursor: pointer;
}
@media (min-width: 748px) {
  .buton {
    width: auto;
  }
}
.container {
  /* Toma ese with como máximo, pero lo toma solo si tiene ese ancho disponible */
  max-width: 120rem;
  /* Atajos para especificar, veritical es 0 y horizontal auto */
  margin: 0 auto;
  padding: 1rem;
}
h1 {
  font-size: 3.8rem; /* 2rem = 20px */
}
h2 {
  font-size: 2.8rem;
}
h3 {
  font-size: 1.8rem;
}
h1,
h2,
h3 {
  text-align: center;
}
a {
  text-decoration: none;
}
/* Otro selector, solo aplicamos a los span donde su padre sea un h1 
  Peso 0-0-2 ese 2 es la cantidad de elementos declarado

  las clase tienen mayor especifidad que los elementos
  Peso 0-1-0  parte desde 1
*/

/* Titulos */
.titulo span {
  font-size: 2rem;
}

/* Sombra */
.sombra {
  -webkit-box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.75);
  -moz-box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.75);
  box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.75);
}

/* Navegación */
.nav-bg {
  background-color: var(--secundario);
}
/* Utilidades */
.flex {
  display: flex;
}
.alinear-derecha {
  justify-content: flex-end;
}
.wd-sm-100 {
  width: 100%;
}
@media (min-width: 768px) {
  .wd-sm-100 {
    width: auto;
  }
}

/* 
Flex: Sirve para hacer layout en una sola dirección row o colum, por default row.

Para modificar los hijos hay una propiedad para cada dirección
row: justify-content
column: align-item

*/
.nav-principal {
  display: flex;
  flex-direction: column;
}
.nav-principal a {
  padding: 1rem;
  display: block;
  text-align: center;
  text-decoration: none;
  color: var(--blanco);
  font-size: 2rem;
  font-weight: 700;
}
.nav-principal a:hover {
  background-color: var(--primario);
  color: var(--oscuro);
}
/*
  Desde 768px para arriba se aplica esto
*/
@media (min-width: 768px) {
  .nav-principal {
    flex-direction: row;
    justify-content: space-around;
  }
}
/* 
Convención de tamaños
  480px
  768px
  1140px
  1400px
*/

/* Hero */
.hero {
  background-image: url(../img/hero.jpg);
  position: relative; /* Definir el padre en relativa, para que los hijos podamos especificar como absolute*/
  background-repeat: no-repeat; /* Para que no se repita la imagen, si no cubre todo el ancho*/
  background-size: cover; /* Escala la imagen, para que tome todo el ancho*/
  height: 45rem;
  margin-bottom: 2rem;
}
.container-hero {
  position: absolute;
  background-color: rgba(0, 0, 0, 0.7); /* anterior sintaxis */
  background-color: rgb(0 0 0 / 70%);
  width: 100%;
  height: 100%;
  /* Código para alinear verticalmente */
  display: flex;
  flex-direction: column;
  align-items: center; /* En el oje principal vertical */
  justify-content: center; /* En el eje secundario horizontal */
}
.container-hero h2,
.container-hero p {
  color: var(--blanco);
}
.container-hero-icon p {
  display: inline;
}
.container-hero a,
.container-hero div,
.container-hero h2 {
  margin-bottom: 1rem;
}
.container-hero .ubicacion {
  display: flex;
  align-items: flex-end;
}
/* Servicio */
.servicios {
  /*
  grid-template-columns: 33.3% 33.3% 33.3%; 
  grid-template-columns: 1fr 1fr 1fr;      Dividir en 3 fracciones iguales, lo mismo que 33.3% 
  */
}
@media (min-width: 768px) {
  .servicios {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    column-gap: 1rem;
  }
}

.servicio {
  text-align: center;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.servicio p {
  line-height: 2;
}
.servicio h3 {
  color: var(--secundario);
  font-weight: normal;
}
.servicio .icons {
  background-color: var(--primario);
  height: 15rem;
  width: 15rem;
  border-radius: 50%;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
}
/* Formulario */
.formulario {
  background-color: var(--gris);
  width: min(60rem, 100%); /* Función que me toma el valor mínimo */
  margin: 0 auto;
  padding: 2rem;
  border-radius: 1rem;
}
.formulario fieldset {
  border-style: none;
}
.formulario legend {
  font-weight: 700;
  text-transform: uppercase;
  color: var(--primario);
  margin-bottom: 1rem;
}
@media (min-width: 768px) {
  .contenedor-campo {
    display: grid;
    grid-template-columns: 50% 50%;
    grid-template-rows: auto auto 20rem;
    column-gap: 1rem;
  }

  /* Podemos seleccionar los elementos que tiene el mismo nombre de class y
  estan dentro de un mismo padre */
  .campo:nth-child(3),
  .campo:nth-child(4) {
    grid-column: 1 / 3; /* Va desde la columna 1 hasta la 3 */
  }
}
.campo {
  margin-bottom: 1rem;
}
.campo textarea {
  height: 18rem;
}
.campo label {
  display: block;
  font-weight: 700;
  color: var(--blanco);
  margin-bottom: 0.5rem;
}
.input-text {
  width: 100%;
  border-style: none;
  padding: 1.5rem;
  border-radius: 1rem;
}
/* Eliminar las flechas del input de tipo number */
.input-text[type="number"]::-webkit-inner-spin-button,
.input-text[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  appearance: none;
  margin: 0;
}
.footer {
  text-align: center;
}
